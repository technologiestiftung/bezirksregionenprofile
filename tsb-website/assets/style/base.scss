@charset "utf-8";

@import
  "variables"
;

// Use media queries like this:
// @include media-query($on-palm) {
//   .wrapper {
//     padding-right: $spacing / 2;
//     padding-left: $spacing / 2;
//   }
// }

$on-palm:          600px !default;
$on-laptop:        800px !default;

@mixin media-query($device) {
  @media screen and (min-width: $device) {
    @content;
  }
}

blockquote, body, dd, dl, figure, h1, h2, h3, h4, h5, h6, hr, ol, p, pre, time, ul {
  margin: 0;
  padding: 0;
}

html {
  font: normal normal 105%/1.7 $font-family-default;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -webkit-font-feature-settings: "kern" 1;
     -moz-font-feature-settings: "kern" 1;
       -o-font-feature-settings: "kern" 1;
          font-feature-settings: "kern" 1;
  font-kerning: normal;
  color: $color-default;
}

.mobile-invisible {
	visibility: hidden;
  display: none;
}

@include media-query($on-palm) {
  .mobile-invisible {
  	visibility: visible;
    display: inherit;
  }
}

a, .link {
  cursor: pointer;
}

a {
  color: $color-accent;
  text-decoration: none;

  &[href^='#'], &:not([href]) {
    color: $color-accent;
  }

  &:hover, &:focus {
    color: darken($color-accent, 20%);
  }

  &.nuxt-link-exact-active {
    color: #222;
    cursor: default;
  }
}

*, *:before, *:after {
  box-sizing: border-box;
  margin: 0;
}

ul li, ol li {
  list-style: none;
  padding: 0;
  margin: 0;
}

nav li, nav ol {
  display: inline-block;
}

figure > img {
  display: block;
}

table {
  width: 100%;
  border-spacing: 0;
  border-collapse: separate;

  tr, td, th {
    padding: 0;
    margin: 0;
  }
}

address {
  font-style: inherit;
}

@import
  "typography",
  "layout"
;